openapi: '3.0.0'
info:
  version: '1.0.0'
  title: 'Sample API'
  description: Buy or rent spacecrafts

paths:
  /user/{userID}:
    parameters:
      - name: userID
        description: The unique identifier of the student
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/UserID'
    get:
      summary: Get a student info
      responses:
        '200':
          description: The student corresponding to the provided `studentID`
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        404:
          description: No student found for the provided `studentID`
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    patch:
      summary: Update student info
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserRequest'
      responses:
        201:
          description: The student signed up successfully
        500:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /sign-up:
    post:
      summary: SignUp new student
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserRegister'
      responses:
        201:
          description: The student signed up successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserID'
        500:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
components:
  schemas:
    UserID:
      description: The unique identifier of a user
      type: integer
    User:
      type: object
      required:
        - id
        - first_name
        - last_name
        - email
        - created_at
        - role
        - barcode
        - phone_number
        - major
        - group
        - year
      properties:
        id:
          $ref: '#/components/schemas/UserID'
        first_name:
          type: string
        last_name:
          type: string
        email:
          type: string
        created_at:
          type: string
        role:
          type: string
        barcode:
          type: string
        phone_number:
          type: string
        major:
          type: string
        group:
          type: string
        year:
          type: string
    UserRequest:
      type: object
      required:
        - first_name
        - last_name
        - email
        - barcode
        - phone_number
        - major
        - group
        - year
      properties:
        first_name:
          type: string
        last_name:
          type: string
        email:
          type: string
        barcode:
          type: string
        phone_number:
          type: string
        major:
          type: string
        group:
          type: string
        year:
          type: string
    UserUpdate:
      type: object
      properties:
        first_name:
          type: string
        last_name:
          type: string
        email:
          type: string
        barcode:
          type: string
        phone_number:
          type: string
        major:
          type: string
        group:
          type: string
        year:
          type: string
    UserRegister:
      type: object
      properties:
        email:
          type: string
        password:
          type: string
        first_name:
          type: string
        last_name:
          type: string
        barcode:
          type: string
        major:
          type: string
        group:
          type: string
        year:
          type: string
    Error:
      type: object
      required:
        - message
      properties:
        message:
          description: A human readable error message
          type: string
  securitySchemes:
    ApiKey:
      type: apiKey
      in: header
      name: X-Api-Key
security:
  - ApiKey: []